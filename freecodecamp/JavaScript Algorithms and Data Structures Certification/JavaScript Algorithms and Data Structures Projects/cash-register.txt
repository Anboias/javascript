function checkCashRegister(price, cash, cid) {
  var change = [];
  // Here is your change, ma'am.

  // Add denominators
  cid[0].push(0.01);
  cid[1].push(0.05);
  cid[2].push(0.1);
  cid[3].push(0.25);
  cid[4].push(1);
  cid[5].push(5);
  cid[6].push(10);
  cid[7].push(20);
  cid[8].push(100);

  let diff = cash - price;

  for (let i = 8; i >= 0; i--) {
      diff = changeFunction(diff, cid[i], i);
  }

  function changeFunction(diff, el, index) {
    let newDiff = diff;
    let type = el[0];
    let amount = el[1];
    let divider = el[2];
    let counter = 0;
 
    if (diff > divider) {
      while (amount >= divider && newDiff >= divider) {
        counter++;
        amount -= divider;
        amount = amount.toFixed(2);
        newDiff -= divider;
        newDiff = newDiff.toFixed(2);
      }
    }
    let tempArr = [];
    tempArr.push(type);
    tempArr.push(counter * divider);
    change.push(tempArr);
    cid[index][1] -= tempArr[1];

    return newDiff;
  }
  const changeLeft = cid.some((item) => {
    return item[1] != 0.0;
  });

  let status = "";
  let obj = new Object();  

  status = changeLeft ? "OPEN" : "CLOSED";

  if (diff > 0) {
    status = "INSUFFICIENT_FUNDS";
    change = [];
  }

  obj.status = status;
  
  if (status == "OPEN") {
    obj.change = change.filter((item) => {
        return item[1] > 0;
    });
  } else {
    obj.change = change.reverse();
  }
  return obj;
}

// Test 3
checkCashRegister(3.26, 100, [["PENNY", 1.01], ["NICKEL", 2.05], ["DIME", 3.1], ["QUARTER", 4.25], ["ONE", 90], ["FIVE", 55], ["TEN", 20], ["TWENTY", 60], ["ONE HUNDRED", 100]]);